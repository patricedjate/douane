{
    "sourceFile": "src/Form/RegistrationFormType.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 23,
            "patches": [
                {
                    "date": 1674457160948,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1674457184555,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,8 +25,11 @@\n                         'message' => 'You should agree to our terms.',\n                     ]),\n                 ],\n             ])\n+            ->add('nom')\n+            ->add('prenom')\n+            ->add('contact')\n             ->add('plainPassword', PasswordType::class, [\n                 // instead of being set onto the object directly,\n                 // this is read and encoded in the controller\n                 'mapped' => false,\n@@ -42,11 +45,9 @@\n                         'max' => 4096,\n                     ]),\n                 ],\n             ])\n-            ->add('nom')\n-            ->add('prenom')\n-            ->add('contact')\n+            \n         ;\n     }\n \n     public function configureOptions(OptionsResolver $resolver): void\n"
                },
                {
                    "date": 1674457200027,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,11 +25,8 @@\n                         'message' => 'You should agree to our terms.',\n                     ]),\n                 ],\n             ])\n-            ->add('nom')\n-            ->add('prenom')\n-            ->add('contact')\n             ->add('plainPassword', PasswordType::class, [\n                 // instead of being set onto the object directly,\n                 // this is read and encoded in the controller\n                 'mapped' => false,\n@@ -45,9 +42,11 @@\n                         'max' => 4096,\n                     ]),\n                 ],\n             ])\n-            \n+            ->add('nom')\n+            ->add('prenom')\n+            ->add('contact')\n         ;\n     }\n \n     public function configureOptions(OptionsResolver $resolver): void\n"
                },
                {
                    "date": 1674462288407,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,9 @@\n use Symfony\\Component\\OptionsResolver\\OptionsResolver;\n use Symfony\\Component\\Validator\\Constraints\\IsTrue;\n use Symfony\\Component\\Validator\\Constraints\\Length;\n use Symfony\\Component\\Validator\\Constraints\\NotBlank;\n+use Vich\\UploaderBundle\\Form\\Type\\VichFileType;\n \n class RegistrationFormType extends AbstractType\n {\n     public function buildForm(FormBuilderInterface $builder, array $options): void\n@@ -45,8 +46,9 @@\n             ])\n             ->add('nom')\n             ->add('prenom')\n             ->add('contact')\n+            ->add(\"imagefile\",VichFileType::class)\n         ;\n     }\n \n     public function configureOptions(OptionsResolver $resolver): void\n"
                },
                {
                    "date": 1674462302695,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n             ])\n             ->add('nom')\n             ->add('prenom')\n             ->add('contact')\n-            ->add(\"imagefile\",VichFileType::class)\n+            ->add(\"imagefile\",VichImageType::class)\n         ;\n     }\n \n     public function configureOptions(OptionsResolver $resolver): void\n"
                },
                {
                    "date": 1674462358020,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,16 +3,17 @@\n namespace App\\Form;\n \n use App\\Entity\\User;\n use Symfony\\Component\\Form\\AbstractType;\n-use Symfony\\Component\\Form\\Extension\\Core\\Type\\CheckboxType;\n-use Symfony\\Component\\Form\\Extension\\Core\\Type\\PasswordType;\n+use Vich\\UploaderBundle\\Form\\Type\\VichFileType;\n use Symfony\\Component\\Form\\FormBuilderInterface;\n-use Symfony\\Component\\OptionsResolver\\OptionsResolver;\n+use Vich\\UploaderBundle\\Form\\Type\\VichImageType;\n use Symfony\\Component\\Validator\\Constraints\\IsTrue;\n use Symfony\\Component\\Validator\\Constraints\\Length;\n use Symfony\\Component\\Validator\\Constraints\\NotBlank;\n-use Vich\\UploaderBundle\\Form\\Type\\VichFileType;\n+use Symfony\\Component\\OptionsResolver\\OptionsResolver;\n+use Symfony\\Component\\Form\\Extension\\Core\\Type\\CheckboxType;\n+use Symfony\\Component\\Form\\Extension\\Core\\Type\\PasswordType;\n \n class RegistrationFormType extends AbstractType\n {\n     public function buildForm(FormBuilderInterface $builder, array $options): void\n@@ -46,9 +47,14 @@\n             ])\n             ->add('nom')\n             ->add('prenom')\n             ->add('contact')\n-            ->add(\"imagefile\",VichImageType::class)\n+            ->add(\"imagefile\",VichImageType::class,[\n+                'label'=>\"Photo\",\n+                \"label_attr\"=>[\n+                    \"\"\n+                ]\n+            ])\n         ;\n     }\n \n     public function configureOptions(OptionsResolver $resolver): void\n"
                },
                {
                    "date": 1674462403651,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,11 +49,9 @@\n             ->add('prenom')\n             ->add('contact')\n             ->add(\"imagefile\",VichImageType::class,[\n                 'label'=>\"Photo\",\n-                \"label_attr\"=>[\n-                    \"\"\n-                ]\n+                \n             ])\n         ;\n     }\n \n"
                },
                {
                    "date": 1674463405422,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,12 +47,8 @@\n             ])\n             ->add('nom')\n             ->add('prenom')\n             ->add('contact')\n-            ->add(\"imagefile\",VichImageType::class,[\n-                'label'=>\"Photo\",\n-                \n-            ])\n         ;\n     }\n \n     public function configureOptions(OptionsResolver $resolver): void\n"
                },
                {
                    "date": 1674463439613,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,11 +3,9 @@\n namespace App\\Form;\n \n use App\\Entity\\User;\n use Symfony\\Component\\Form\\AbstractType;\n-use Vich\\UploaderBundle\\Form\\Type\\VichFileType;\n use Symfony\\Component\\Form\\FormBuilderInterface;\n-use Vich\\UploaderBundle\\Form\\Type\\VichImageType;\n use Symfony\\Component\\Validator\\Constraints\\IsTrue;\n use Symfony\\Component\\Validator\\Constraints\\Length;\n use Symfony\\Component\\Validator\\Constraints\\NotBlank;\n use Symfony\\Component\\OptionsResolver\\OptionsResolver;\n"
                },
                {
                    "date": 1674480885840,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n {\n     public function buildForm(FormBuilderInterface $builder, array $options): void\n     {\n         $builder\n-            ->add('email')\n+            ->add('email', EmailType::class)\n             ->add('agreeTerms', CheckboxType::class, [\n                 'mapped' => false,\n                 'constraints' => [\n                     new IsTrue([\n"
                },
                {
                    "date": 1674481053961,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,17 +8,26 @@\n use Symfony\\Component\\Validator\\Constraints\\IsTrue;\n use Symfony\\Component\\Validator\\Constraints\\Length;\n use Symfony\\Component\\Validator\\Constraints\\NotBlank;\n use Symfony\\Component\\OptionsResolver\\OptionsResolver;\n+use Symfony\\Component\\Form\\Extension\\Core\\Type\\EmailType;\n use Symfony\\Component\\Form\\Extension\\Core\\Type\\CheckboxType;\n use Symfony\\Component\\Form\\Extension\\Core\\Type\\PasswordType;\n \n class RegistrationFormType extends AbstractType\n {\n     public function buildForm(FormBuilderInterface $builder, array $options): void\n     {\n         $builder\n-            ->add('email', EmailType::class)\n+            ->add('email', EmailType::class,[\n+                \"attr\"=>[\n+                    \"class\"=>\"form-control floating\"\n+                ],\n+                \"label_attr\"=>[\n+                    \"class\"=>\"focus-label\"\n+                ],\n+                \"label\"=>\"Email\"\n+            ])\n             ->add('agreeTerms', CheckboxType::class, [\n                 'mapped' => false,\n                 'constraints' => [\n                     new IsTrue([\n"
                },
                {
                    "date": 1674481173999,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,15 @@\n             ->add('plainPassword', PasswordType::class, [\n                 // instead of being set onto the object directly,\n                 // this is read and encoded in the controller\n                 'mapped' => false,\n-                'attr' => ['autocomplete' => 'new-password'],\n+                'attr' => ['autocomplete' => 'new-password',\n+                \"class\"=>\"form-control floating\"\n+            ],\n+            \"label_attr\"=>[\n+                \"class\"=>\"focus-label\"\n+            ],\n+            \"label\"=>\"Mot de passe\",\n                 'constraints' => [\n                     new NotBlank([\n                         'message' => 'Please enter a password',\n                     ]),\n"
                },
                {
                    "date": 1674481475443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n                         'max' => 4096,\n                     ]),\n                 ],\n             ])\n-            ->add('nom')\n+            ->add('nom',TextType:class)\n             ->add('prenom')\n             ->add('contact')\n         ;\n     }\n"
                },
                {
                    "date": 1674481483469,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n                         'max' => 4096,\n                     ]),\n                 ],\n             ])\n-            ->add('nom',TextType:class)\n+            ->add('nom',TextType::class)\n             ->add('prenom')\n             ->add('contact')\n         ;\n     }\n"
                },
                {
                    "date": 1674481535945,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,9 @@\n use Symfony\\Component\\Validator\\Constraints\\IsTrue;\n use Symfony\\Component\\Validator\\Constraints\\Length;\n use Symfony\\Component\\Validator\\Constraints\\NotBlank;\n use Symfony\\Component\\OptionsResolver\\OptionsResolver;\n+use Symfony\\Component\\Form\\Extension\\Core\\Type\\TextType;\n use Symfony\\Component\\Form\\Extension\\Core\\Type\\EmailType;\n use Symfony\\Component\\Form\\Extension\\Core\\Type\\CheckboxType;\n use Symfony\\Component\\Form\\Extension\\Core\\Type\\PasswordType;\n \n@@ -57,9 +58,17 @@\n                         'max' => 4096,\n                     ]),\n                 ],\n             ])\n-            ->add('nom',TextType::class)\n+            ->add('nom',TextType::class,[\n+                \"attr\"=>[\n+                    \"class\"=>\"form-control floating\"\n+                ],\n+                \"label_attr\"=>[\n+                    \"class\"=>\"focus-label\"\n+                ],\n+                \"label\"=>\"Nom\"\n+            ])\n             ->add('prenom')\n             ->add('contact')\n         ;\n     }\n"
                },
                {
                    "date": 1674481601268,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,18 @@\n                     \"class\"=>\"focus-label\"\n                 ],\n                 \"label\"=>\"Nom\"\n             ])\n-            ->add('prenom')\n+            ->add('prenom',TextType::class,\n+            [\n+                \"attr\"=>[\n+                    \"class\"=>\"form-control floating\"\n+                ],\n+                \"label_attr\"=>[\n+                    \"class\"=>\"focus-label\"\n+                ],\n+                \"label\"=>\"Nom\"\n+            ])\n             ->add('contact')\n         ;\n     }\n \n"
                },
                {
                    "date": 1674481622720,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n                 ],\n                 \"label_attr\"=>[\n                     \"class\"=>\"focus-label\"\n                 ],\n-                \"label\"=>\"Nom\"\n+                \"label\"=>\"Prenom\"\n             ])\n             ->add('contact')\n         ;\n     }\n"
                },
                {
                    "date": 1674481694882,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,18 @@\n                     \"class\"=>\"focus-label\"\n                 ],\n                 \"label\"=>\"Prenom\"\n             ])\n-            ->add('contact')\n+            ->add('contact',TextType::class,\n+            [\n+                \"attr\"=>[\n+                    \"class\"=>\"form-control floating\"\n+                ],\n+                \"label_attr\"=>[\n+                    \"class\"=>\"focus-label\"\n+                ],\n+                \"label\"=>\"Prenom\"\n+            ])\n         ;\n     }\n \n     public function configureOptions(OptionsResolver $resolver): void\n"
                },
                {
                    "date": 1674482041968,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,9 +85,9 @@\n                 ],\n                 \"label_attr\"=>[\n                     \"class\"=>\"focus-label\"\n                 ],\n-                \"label\"=>\"Prenom\"\n+                \"label\"=>\"Contact\"\n             ])\n         ;\n     }\n \n"
                },
                {
                    "date": 1674482157902,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n             ],\n             \"label\"=>\"Mot de passe\",\n                 'constraints' => [\n                     new NotBlank([\n-                        'message' => 'Please enter a password',\n+                        'message' => 'Veuillez entrer un mot de passe',\n                     ]),\n                     new Length([\n                         'min' => 6,\n                         'minMessage' => 'Your password should be at least {{ limit }} characters',\n"
                },
                {
                    "date": 1674482265017,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n             ->add('agreeTerms', CheckboxType::class, [\n                 'mapped' => false,\n                 'constraints' => [\n                     new IsTrue([\n-                        'message' => 'You should agree to our terms.',\n+                        'message' => 'Vous devez accepter nos conditions',\n                     ]),\n                 ],\n             ])\n             ->add('plainPassword', PasswordType::class, [\n"
                },
                {
                    "date": 1690278943539,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n                         'message' => 'Veuillez entrer un mot de passe',\n                     ]),\n                     new Length([\n                         'min' => 6,\n-                        'minMessage' => 'Your password should be at least {{ limit }} characters',\n+                        'minMessage' => 'Votre mot de passe doit contenir {{ limit }} characters',\n                         // max length allowed by Symfony for security reasons\n                         'max' => 4096,\n                     ]),\n                 ],\n@@ -87,8 +87,9 @@\n                     \"class\"=>\"focus-label\"\n                 ],\n                 \"label\"=>\"Contact\"\n             ])\n+            \n         ;\n     }\n \n     public function configureOptions(OptionsResolver $resolver): void\n"
                },
                {
                    "date": 1690279145871,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,8 +33,9 @@\n                 'constraints' => [\n                     new IsTrue([\n                         'message' => 'Vous devez accepter nos conditions',\n                     ]),\n+                    'label'=>\"J'accepte les conditions\",\n                 ],\n             ])\n             ->add('plainPassword', PasswordType::class, [\n                 // instead of being set onto the object directly,\n"
                },
                {
                    "date": 1690279199240,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,8 @@\n                 'constraints' => [\n                     new IsTrue([\n                         'message' => 'Vous devez accepter nos conditions',\n                     ]),\n-                    'label'=>\"J'accepte les conditions\",\n                 ],\n             ])\n             ->add('plainPassword', PasswordType::class, [\n                 // instead of being set onto the object directly,\n"
                }
            ],
            "date": 1674457160948,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Form;\n\nuse App\\Entity\\User;\nuse Symfony\\Component\\Form\\AbstractType;\nuse Symfony\\Component\\Form\\Extension\\Core\\Type\\CheckboxType;\nuse Symfony\\Component\\Form\\Extension\\Core\\Type\\PasswordType;\nuse Symfony\\Component\\Form\\FormBuilderInterface;\nuse Symfony\\Component\\OptionsResolver\\OptionsResolver;\nuse Symfony\\Component\\Validator\\Constraints\\IsTrue;\nuse Symfony\\Component\\Validator\\Constraints\\Length;\nuse Symfony\\Component\\Validator\\Constraints\\NotBlank;\n\nclass RegistrationFormType extends AbstractType\n{\n    public function buildForm(FormBuilderInterface $builder, array $options): void\n    {\n        $builder\n            ->add('email')\n            ->add('agreeTerms', CheckboxType::class, [\n                'mapped' => false,\n                'constraints' => [\n                    new IsTrue([\n                        'message' => 'You should agree to our terms.',\n                    ]),\n                ],\n            ])\n            ->add('plainPassword', PasswordType::class, [\n                // instead of being set onto the object directly,\n                // this is read and encoded in the controller\n                'mapped' => false,\n                'attr' => ['autocomplete' => 'new-password'],\n                'constraints' => [\n                    new NotBlank([\n                        'message' => 'Please enter a password',\n                    ]),\n                    new Length([\n                        'min' => 6,\n                        'minMessage' => 'Your password should be at least {{ limit }} characters',\n                        // max length allowed by Symfony for security reasons\n                        'max' => 4096,\n                    ]),\n                ],\n            ])\n            ->add('nom')\n            ->add('prenom')\n            ->add('contact')\n        ;\n    }\n\n    public function configureOptions(OptionsResolver $resolver): void\n    {\n        $resolver->setDefaults([\n            'data_class' => User::class,\n        ]);\n    }\n}\n"
        }
    ]
}